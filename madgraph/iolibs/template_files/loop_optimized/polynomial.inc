C THE SUBROUTINE TO CREATE THE COEFFICIENTS FROM LAST LOOP WF AND 
C MULTIPLY BY THE BORN

      SUBROUTINE CREATE_LOOP_COEFS(LOOP_WF,RANK,LCUT_SIZE,LOOP_COEFS,SYMFACT,COLOR_ID,HELCONFIG)
	  implicit none
C  
C CONSTANTS 
C 
	  %(nbornamps_decl)s
	  %(complex_dp_format)s IMAG1
      PARAMETER (IMAG1=(0D0,1D0))
	  INTEGER MAXLWFSIZE
	  PARAMETER (MAXLWFSIZE=%(max_lwf_size)d)
	  INTEGER LOOPMAXCOEFS
	  PARAMETER (LOOPMAXCOEFS=%(loop_max_coefs)d)
      INTEGER    NCOLORROWS
	  PARAMETER (NCOLORROWS=%(nloopamps)d)
	  INTEGER    NLOOPGROUPS
      PARAMETER (NLOOPGROUPS=%(nloop_groups)d)
	  INTEGER    NCOMB
      PARAMETER (NCOMB=%(ncomb)d)
C  
C ARGUMENTS 
C  
      %(complex_dp_format)s LOOP_WF(MAXLWFSIZE,0:LOOPMAXCOEFS-1,MAXLWFSIZE)
	  INTEGER RANK, COLOR_ID, SYMFACT, LCUT_SIZE, HELCONFIG
	  %(complex_dp_format)s LOOP_COEFS(LOOPMAXCOEFS)
C  
C LOCAL VARIABLES 
C
      %(complex_dp_format)s CFTOT
      %(complex_dp_format)s CONST
      INTEGER I,H
C
C GLOBAL VARIABLES
C
	  INTEGER CF_D(NCOLORROWS,%(color_matrix_size)s)
	  INTEGER CF_N(NCOLORROWS,%(color_matrix_size)s)
	  common/CF/CF_D,CF_N

	  LOGICAL CHECKPHASE
	  LOGICAL HELDOUBLECHECKED
      common/INIT/CHECKPHASE, HELDOUBLECHECKED

	  INTEGER HELOFFSET
	  INTEGER GOODHEL(NCOMB)
	  LOGICAL GOODAMP(NLOOPGROUPS)
	  common/Filters/GOODAMP,GOODHEL,HELOFFSET

	  INTEGER HELPICKED
	  common/HELCHOICE/HELPICKED

	  %(dp_born_amps_decl)s

	  CONST=(0.0d0,0.0d0)

    DO I=1,NBORNAMPS
	  CFTOT=DCMPLX(CF_N(COLOR_ID,I)/DBLE(ABS(CF_D(COLOR_ID,I))),0.0d0)
	  IF(CF_D(COLOR_ID,I).LT.0) CFTOT=CFTOT*IMAG1
	  CONST=CONST+CFTOT*DCONJG(AMP(I))
	ENDDO 
	  CONST=CONST/SYMFACT
	  IF (.NOT.CHECKPHASE.AND.HELDOUBLECHECKED.AND.HELPICKED.EQ.-1) THEN
	    CONST=CONST*GOODHEL(HELCONFIG)
	  ENDIF
	  CALL MERGE_WL(LOOP_WF,RANK,LCUT_SIZE,CONST,LOOP_COEFS)

	  END

      SUBROUTINE MP_CREATE_LOOP_COEFS(LOOP_WF,RANK,LCUT_SIZE,LOOP_COEFS,SYMFACT,COLOR_ID,HELCONFIG)
C  
C CONSTANTS 
C 
	  %(nbornamps_decl)s
	  %(complex_mp_format)s IMAG1
      PARAMETER (IMAG1=(0e0_16,1e0_16))
	  INTEGER MAXLWFSIZE
	  PARAMETER (MAXLWFSIZE=%(max_lwf_size)d)
	  INTEGER LOOPMAXCOEFS
	  PARAMETER (LOOPMAXCOEFS=%(loop_max_coefs)d)
      INTEGER    NCOLORROWS
	  PARAMETER (NCOLORROWS=%(nloopamps)d)
	  INTEGER    NLOOPGROUPS
      PARAMETER (NLOOPGROUPS=%(nloop_groups)d)
	  INTEGER    NCOMB
      PARAMETER (NCOMB=%(ncomb)d)
C  
C ARGUMENTS 
C  
      %(complex_mp_format)s LOOP_WF(MAXLWFSIZE,0:LOOPMAXCOEFS-1,MAXLWFSIZE)
	  INTEGER RANK, COLOR_ID, SYMFACT, LCUT_SIZE, HELCONFIG
	  %(complex_mp_format)s LOOP_COEFS(LOOPMAXCOEFS)
C  
C LOCAL VARIABLES 
C
      %(complex_mp_format)s CFTOT
      %(complex_mp_format)s CONST
      INTEGER I,H
C
C GLOBAL VARIABLES
C
	  INTEGER CF_D(NCOLORROWS,%(color_matrix_size)s)
	  INTEGER CF_N(NCOLORROWS,%(color_matrix_size)s)
	  common/CF/CF_D,CF_N

	  LOGICAL CHECKPHASE
	  LOGICAL HELDOUBLECHECKED
      common/INIT/CHECKPHASE, HELDOUBLECHECKED

	  INTEGER HELOFFSET
	  INTEGER GOODHEL(NCOMB)
	  LOGICAL GOODAMP(NLOOPGROUPS)
	  common/Filters/GOODAMP,GOODHEL,HELOFFSET

	  INTEGER HELPICKED
	  common/HELCHOICE/HELPICKED

	  %(mp_born_amps_decl)s

	  CONST=(0.0e0_16,0.0e0_16)

    DO I=1,NBORNAMPS
	  CFTOT=CMPLX(CF_N(COLOR_ID,I)/REAL(ABS(CF_D(COLOR_ID,I)),KIND=16),0.0e0_16,KIND=16)
	  IF(CF_D(COLOR_ID,I).LT.0) CFTOT=CFTOT*IMAG1
	  CONST=CONST+CFTOT*CONJG(AMP(I))
	ENDDO 
	  CONST=CONST/SYMFACT
	  IF (.NOT.CHECKPHASE.AND.HELDOUBLECHECKED.AND.HELPICKED.EQ.-1) THEN
	    CONST=CONST*GOODHEL(HELCONFIG)
	  ENDIF
	  CALL MP_MERGE_WL(LOOP_WF,RANK,LCUT_SIZE,CONST,LOOP_COEFS)

	  END
